# https://github.com/snyk/actions/tree/master/dotnet
name: Snyk Security

on:
  push:
    branches: ["main" ]
  pull_request:
    branches: ["main"]

permissions:
  contents: read

jobs:
  # security:
  #   permissions:
  #     actions: read
  #     contents: read
  #     statuses: read
  #     security-events: write
  #   runs-on: ubuntu-latest
  #   # env:
  #   #   working-directory: ./AdventOfCode2023
  #   # defaults:
  #   #   run:
  #   #     working-directory: ${{ env.working-directory }}
  #   steps:
  #     - uses: actions/checkout@master
  #     - name: Run Snyk to check for vulnerabilities
  #       uses: snyk/actions/dotnet@master
  #       continue-on-error: true # To make sure that SARIF upload gets called
  #       env:
  #         SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
  #       with:
  #         args: --sarif-file-output=snyk.sarif
  #     - name: Upload result to GitHub Code Scanning
  #       uses: github/codeql-action/upload-sarif@v2
  #       with:
  #         sarif_file: snyk.sarif
  snyk:
    permissions:
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
      actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
    runs-on: ubuntu-latest
    env:
      # This is where you will need to introduce the Snyk API token created with your Snyk account
      SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - uses: snyk/actions/setup@master
      - name: Snyk code test
        run: snyk code test
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      # - name: Set up Snyk CLI to check for security issues
      #   uses: actions/setup-dotnet@v3
      #   with:
      #     dotnet-version: 7.0.402
      # - name: Restore dependencies
      #   run: dotnet restore ./DotNetSandbox.sln
      # - name: High Severity Scan
      #   uses: snyk/actions/dotnet@master
      #   env:
      #     SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      #   with:
      #     args: --severity-threshold=high

      #   # Runs Snyk Code (SAST) analysis and uploads result into GitHub.
      #   # Use || true to not fail the pipeline
      # - name: Snyk Code test
      #   run: snyk code test --sarif > snyk-code.sarif || true
      #   # Runs Snyk Open Source (SCA) analysis and uploads result to Snyk.

      # - name: Snyk Open Source monitor
      #   run: snyk monitor --all-projects

      #   # Runs Snyk Infrastructure as Code (IaC) analysis and uploads result to Snyk.
      #   # Use || true to not fail the pipeline.
      # - name: Snyk IaC test and report
      #   run: snyk iac test --report # || true

      #   # Build the docker image for testing
      # - name: Build a Docker image
      #   run: docker build f Dockerfiles/Dockerfile.dotnet7.console -t your/image-to-test .
      #   # Runs Snyk Container (Container and SCA) analysis and uploads result to Snyk.
      # - name: Snyk Container monitor
      #   run: snyk container monitor your/image-to-test --file=Dockerfile

      #   # Push the Snyk Code results into GitHub Code Scanning tab
      # - name: Upload result to GitHub Code Scanning
      #   uses: github/codeql-action/upload-sarif@v2
      #   with:
      #     sarif_file: snyk-code.sarif
